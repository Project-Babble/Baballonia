<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
        One for Windows with net8.0-windows TFM, one for MacOS with net8.0-macos and one with net8.0 TFM for Linux.-->
        <TargetFramework>net8.0</TargetFramework>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
        <RootNamespace>AvaloniaMiaDev.Desktop</RootNamespace>
        <ApplicationIcon>Assets\IconOpaque_32x32.ico</ApplicationIcon>
    </PropertyGroup>

    <PropertyGroup>
        <ApplicationManifest>app.manifest</ApplicationManifest>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia.Desktop" Version="11.2.8" />

        <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
        <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.2.8" />
        <PackageReference Include="Velopack" Version="0.0.1053" />

	<!-- Windows-specific -->
    	<PackageReference Include="OpenCvSharp4.runtime.win" Version="4.10.0.20241108" Condition="$([MSBuild]::IsOSPlatform('Windows'))"/>
	<PackageReference Include="Microsoft.ML.OnnxRuntime.DirectML" Version="1.21.0" Condition="$([MSBuild]::IsOSPlatform('Windows'))"/>

    	<!-- macOS-specific -->
    	<PackageReference Include="OpenCvSharp4.runtime.osx.10.15-universal" Version="4.7.0.20230224" Condition="$([MSBuild]::IsOSPlatform('OSX'))"/>
	<PackageReference Include="Microsoft.ML.OnnxRuntime" Version="1.21.0" Condition="$([MSBuild]::IsOSPlatform('OSX'))"/>

    	<!-- Linux-specific -->
    	<Content Include="libOpenCvSharpExtern.so" Link="libOpenCvSharpExtern.so" Condition="$([MSBuild]::IsOSPlatform('Linux'))"/>
	<PackageReference Include="Microsoft.ML.OnnxRuntime.Gpu" Version="1.20.1" Condition="$([MSBuild]::IsOSPlatform('Linux'))"/>
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\Baballonia\Baballonia.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Reference Include="OpenCvSharp">
        <HintPath>..\..\..\opencvsharp\src\OpenCvSharp\bin\Debug\net6.0\OpenCvSharp.dll</HintPath>
      </Reference>
    </ItemGroup>

    <ItemGroup>
      <None Remove="libOpenCvSharpExtern.so" />
      <Content Include="libOpenCvSharpExtern.so">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
      <None Update="assets\BannerOpaque_90x58.png">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\BannerOpaque_175x345.png">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\Icon_32x32.ico">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\Icon_512x512.png">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\IconOpaque_32x32.ico">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\IconOpaque_32x32.png">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\MUI_HEADERIMAGE_BITMAP.bmp">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\MUI_WELCOMEFINISHPAGE_BITMAP.bmp">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
      <None Update="assets\license.txt">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
    </ItemGroup>
</Project>
